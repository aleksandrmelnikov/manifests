apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: modeldb
  namespace: onepanel
spec:
  selector:
    matchLabels:
      app: modeldb
  replicas: 1
  serviceName: modeldb
  template:
    metadata:
      labels:
        app: modeldb
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: frontend
          image: vertaaiofficial/modeldb-frontend:2.0.7
          ports:
            - containerPort: 4200
              name: http2
            - containerPort: 3000
              name: http
          env:
            - name: NODE_ENV
              value: production
            - name: DEPLOYED
              value: "yes"
            - name: BACKEND_API_PROTOCOL
              value: "http"
            - name: BACKEND_API_DOMAIN
              value: localhost:3000
            - name: MDB_ADDRESS
              value: http://localhost:8080
            - name: ARTIFACTORY_ADDRESS
              value: "http://localhost:8086"
            - name: GQL_ADDRESS
              value: "http://localhost:3010"
        - name: graphql
          image: vertaaiofficial/modeldb-graphql:2.0.7
          ports:
            - containerPort: 3010
          env:
            - name: MDB_ADDRESS
              value: localhost:8085
            - name: QUERY_PATH
              value: "/api/v1/graphql/query"
            - name: SERVER_HTTP_PORT
              value: "3010"
        - name: backend
          image: vertaaiofficial/modeldb-backend:2.0.7
          env:
            - name: VERTA_MODELDB_CONFIG
              value: "/config-backend/config.yaml"
          ports:
            - containerPort: 8085
              name: backend
            - containerPort: 8086
              name: artifactstore
          volumeMounts:
            - name: modeldb-secret-volume
              mountPath: "/config-backend"
              readOnly: true
            - name: modeldb
              mountPath: "/artifact-store/"
        - name: proxy
          image: vertaaiofficial/modeldb-proxy:2.0.7
          env:
            - name: MDB_ADDRESS
              value: localhost:8085
            - name: SERVER_HTTP_PORT
              value: "8080"
          ports:
            - containerPort: 8080
              name: http
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: root
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: modeldb-postgres-pv-claim
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: modeldb-secret-volume
          secret:
            secretName: modeldb-backend-config-secret

  volumeClaimTemplates:
    - metadata:
        name: modeldb-postgres-pv-claim
        labels:
          app: modeldb
      spec:
        storageClassName: onepanel
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: modeldb
        labels:
          app: modeldb
          component: backend
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 10Gi