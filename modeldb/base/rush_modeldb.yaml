apiVersion: v1
kind: Secret
metadata:
  name: modeldb-backend-config-secret
  namespace: rush
stringData:
  config.yaml: |
    artifactStore_grpcServer:
      host: localhost
      port: 8086
    artifactStoreConfig:
      artifactStoreType: S3
      S3:
        cloudAccessKey: AKIAICUUXWI3YOVETW5A
        cloudSecretKey: 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
        cloudBucketName: andrey-modeldb-test
        aws_region: us-west-2
    cron_job:
      delete_entities:
        frequency: 60
        record_update_limit: 100
      update_parent_timestamp:
        frequency: 10
        record_update_limit: 100
    database:
      DBType: relational
      RdbConfiguration:
        RdbDatabaseName: modeldb
        RdbDialect: org.hibernate.dialect.PostgreSQLDialect
        RdbDriver: org.postgresql.Driver
        RdbPassword: 0n3p6n3lp@55
        RdbUrl: jdbc:postgresql://onepanel-demo-db.postgres.database.azure.com:5432
        RdbUsername: onepanel@onepanel-demo-db
      liquibaseLockThreshold: 60
      timeout: 4
    grpcServer:
      port: 8085
    springServer:
      port: 8086
      shutdownTimeout: 30
    telemetry:
      consumer: https://app.verta.ai/api/v1/uac-proxy/telemetry/collectTelemetry
      frequency: 1
      opt_in: false
    test:
      test-database:
        DBType: relational
        RdbConfiguration:
          RdbDatabaseName: modeldb
          RdbDialect: org.hibernate.dialect.PostgreSQLDialect
          RdbDriver: org.postgresql.Driver
          RdbPassword: 0n3p6n3lp@55
          RdbUrl: jdbc:postgresql://onepanel-demo-db.postgres.database.azure.com:5432
          RdbUsername: onepanel@onepanel-demo-db
        liquibaseLockThreshold: 60
        timeout: 4
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: modeldb
    component: backend
  name: modeldb-backend
  namespace: rush
spec:
  ports:
  - name: backend
    port: 8085
  - name: artifactstore
    port: 8086
  - name: http
    port: 3005
    targetPort: 3000
  selector:
    app: modeldb
    component: backend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: modeldb
    component: graphql
  name: modeldb-graphql
  namespace: rush
spec:
  ports:
  - port: 3000
  selector:
    app: modeldb
    component: graphql
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: modeldb
    component: webapp
  name: modeldb-webapp
  namespace: rush
spec:
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: modeldb
    component: webapp
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: modeldb
    component: graphql
  name: modeldb-graphql
  namespace: rush
spec:
  selector:
    matchLabels:
      app: modeldb
      component: graphql
  template:
    metadata:
      annotations:
        verta.ai/disable_anti_affinity: "true"
      labels:
        app: modeldb
        component: graphql
    spec:
      containers:
      - env:
        - name: MDB_ADDRESS
          value: modeldb-backend:8085
        - name: QUERY_PATH
          value: /api/v1/graphql/query
        - name: SERVER_HTTP_PORT
          value: "3000"
        image: vertaaiofficial/modeldb-graphql:latest
        imagePullPolicy: Always
        name: modeldb
        ports:
        - containerPort: 3000
        resources:
          limits:
            cpu: 100m
            memory: 64Mi
          requests:
            cpu: 100m
            memory: 64Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: modeldb
    component: webapp
  name: modeldb-webapp
  namespace: rush
spec:
  selector:
    matchLabels:
      app: modeldb
      component: webapp
  template:
    metadata:
      annotations:
        verta.ai/disable_anti_affinity: "true"
      labels:
        app: modeldb
        component: webapp
    spec:
      containers:
      - env:
        - name: NODE_ENV
          value: production
        - name: DEPLOYED
          value: "yes"
        - name: BACKEND_API_PROTOCOL
          value: http
        - name: BACKEND_API_DOMAIN
          value: modeldb-webapp:3000
        - name: MDB_ADDRESS
          value: http://modeldb-backend:3005
        - name: ARTIFACTORY_ADDRESS
          value: http://modeldb-backend:8086
        - name: GQL_ADDRESS
          value: http://modeldb-graphql:3000
        - name: GRAPHQL_CHANGE_ORIGIN
          value: "true"
        image: onepanel/modeldb_web:0.0.1
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 10
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 1
          periodSeconds: 10
        name: modeldb
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 1
          periodSeconds: 5
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 250m
            memory: 256Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: modeldb
    component: backend
  name: modeldb-backend
  namespace: rush
spec:
  selector:
    matchLabels:
      app: modeldb
      component: backend
  serviceName: modeldb-headless
  template:
    metadata:
      annotations:
        checksum/config: 74ff65e869dc95685033affe042f25ebfb5a81fe20c0f57f65312ef943823e45
        verta.ai/disable_anti_affinity: "true"
      labels:
        app: modeldb
        component: backend
    spec:
      containers:
      - env:
        - name: VERTA_MODELDB_CONFIG
          value: /config/config.yaml
        image: onepanel/modeldb-backend:0.0.2
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - sleep 10
        name: backend
        ports:
        - containerPort: 8085
          name: backend
        - containerPort: 8086
          name: artifactstore
        resources:
          limits:
            cpu: 750m
            memory: 1Gi
          requests:
            cpu: 750m
            memory: 1Gi
        volumeMounts:
        - mountPath: /config
          name: modeldb-secret-volume
          readOnly: true
        - mountPath: /artifact-store/
          name: modeldb
      - env:
        - name: MDB_ADDRESS
          value: localhost:8085
        - name: SERVER_HTTP_PORT
          value: "3000"
        image: vertaaiofficial/modeldb-proxy:latest
        imagePullPolicy: Always
        name: proxy
        ports:
        - containerPort: 3000
          name: http
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 500m
            memory: 256Mi
      volumes:
      - name: modeldb-secret-volume
        secret:
          secretName: modeldb-backend-config-secret
  volumeClaimTemplates:
  - metadata:
      labels:
        app: modeldb
        component: backend
      name: modeldb
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 100Gi
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: modeldb
  namespace: rush
spec:
  gateways:
  - istio-system/ingressgateway
  hosts:
  - modeldb--rush.demo.onepanel.site
  http:
  - match:
    - uri:
        prefix: /
    route:
    - destination:
        host: modeldb-webapp
        port:
          number: 80
