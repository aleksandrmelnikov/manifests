apiVersion: v1
kind: Secret
metadata:
  name: modeldb-backend-config-secret
  namespace: onepanel
type: Opaque
stringData:
  config.yaml: |
    artifactStore_grpcServer:
      host: localhost
      port: 8086
    artifactStoreConfig:
      artifactStoreType: S3
      S3:
        cloudAccessKey: $(componentsModelDbArtifactRepositoryS3AccessKey)
        cloudSecretKey: $(componentsModelDbArtifactRepositoryS3SecretKey)
        cloudBucketName: $(componentsModelDbArtifactRepositoryS3Bucket)
        aws_region: $(componentsModelDbArtifactRepositoryS3Region)
    cron_job:
      delete_entities:
        frequency: 60
        record_update_limit: 100
      update_parent_timestamp:
        frequency: 10
        record_update_limit: 100
    database:
      DBType: relational
      RdbConfiguration:
        RdbDatabaseName: $(componentsModelDbDatabaseDatabaseName)
        RdbDialect: org.hibernate.dialect.PostgreSQLDialect
        RdbDriver: org.postgresql.Driver
        RdbPassword: $(componentsModelDbDatabasePassword)
        RdbUrl: jdbc:postgresql://$(componentsModelDbDatabaseHost):$raw(componentsModelDbDatabasePort)
        RdbUsername: $(componentsModelDbDatabaseUsername)
      liquibaseLockThreshold: 60
      timeout: 4
    grpcServer:
      port: 8085
    springServer:
      port: 8086
      shutdownTimeout: 30
    telemetry:
      consumer: https://app.verta.ai/api/v1/uac-proxy/telemetry/collectTelemetry
      frequency: 1
      opt_in: false
    test:
      test-database:
        DBType: relational
        RdbConfiguration:
          RdbDatabaseName: $(componentsModelDbDatabaseDatabaseName)
          RdbDialect: org.hibernate.dialect.PostgreSQLDialect
          RdbDriver: org.postgresql.Driver
          RdbPassword: $(componentsModelDbDatabasePassword)
          RdbUrl: jdbc:postgresql://$(componentsModelDbDatabaseHost):$raw(componentsModelDbDatabasePort)
          RdbUsername: $(componentsModelDbDatabaseUsername)
        liquibaseLockThreshold: 60
        timeout: 4